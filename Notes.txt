
gitignore - https://www.atlassian.com/git/tutorials/saving-changes/
          - https://www.w3schools.com/git/git_ignore.asp

why should we not use CDN links to develop our project?
    - making a request to fetch react script from CDN is costly,
      if we have react, already in node modules it is easy to use.
    - if the react gets updated, we will need to update the
      CDN Links manually to update react in our project.
    - managing the react is easy and convinient in package.json.

difference between npm and npx?
    npm - install package
    npx - execute package

/// PENDING
Read about Script types in html.
what is type="module" in script tag?
    - "Browser scripts cannot have imports and exports."
    - normal js doesnt have imports, we need to specify that
      it is not normal js file but a module.

/// SEE Notes ///
Read about dif bundlers: vite, webpack, parcel

What is `Parcel/Webpack`? Why do we need it?
    - it makes react app fast, how?

parcel 
    - It gives dev build
    - It gives local server to host the app.
    - Error Handling.
    - HMR - Hot Module Replacement (What is Hot Module Replacement?)
            parcel uses file watching algorithm written in c++, 
            It keeps track of all the files 
            which are changing realtime and 
            it tells the server to reload.
    - It gives faster builds because 
      of caching done in .parcel-cache. (What is `.parcel-cache`)
    - It also does Image Optimization.
    - In Production build it will do 
      Minification, Bundling and Compression.
    - Consistent Hashing (Learn in detail)
    - Code Spliting (Learn in detail)
    - Differential Bundling (Learn in detail)
    - Tree Shaking algorithm.
    - Different build for dev and prod.

What is the `dist` folder?

What is `browserlists` ?
    - https://browserslist.dev/?q=bGFzdCAyIENocm9tZSB2ZXJzaW9u


//REFER NOTES

what is jsx?
    - jsx is html like syntax.
    - it is not pure js, js engine wont understand jsx.
    - js engine only understand ES6 or EcmmaScript

what is Babel?
    - https://babeljs.io/docs/
    - Its is not developed by facebook.
    - jsx code transpiled (converted) 
      before it reaches the JS Engine.

FLOW OF React.createElement 
    React.createElement => ReactElement-JS Object => 
    HTMLElement (this is rendered on browser)

FLOW OF JSX 
    JSX Code => React.createElement => ReactElement-JS Object => 
    HTMLElement (this is rendered on browser)

Html tags attributes in jsx? why it is in camel case?

React Element v/s React Components (Class and Functional)
    - Functional Component : it is a js function which returns jsx code.

What is component composition?

Cross Site Scripting in jsx !important

Key property in React. !important
    if a component has multiple children, react optimize its
    render cycle when the children are at same level,
    they should be unique represented, 
    if a new component needs to be added to children
    if we dint had unique key, react will re render all
    children component because react doesnt know where to 
    put the new component.
    but if we had unique key then react wont re render all 
    components but just the new one.
    - we shouldnt use index as react key, it is bad practice.
      why??


src folder??
https://legacy.reactjs.org/docs/faq-structure.html

Types of import and exports
can i use default and named export together?

what is react hook?
  - normal js utility functions
  - important hooks - useState - state variable in react, 
                               - !!!whenever state variable updates 
                                 react re-renders the component
                      useEffect

what is state?

CROS POLICY (Namaste dev cros policy)

///////////////////////////////////////////////////////////////
Routing in web - client side routing
               - server side routing

//////////////////////////////////////////////////////////////
Chunking
code Spliting
Dynamic Bundling
Lazy Loading
On demand loading

////////////////////////////REDUX//////////////////////////////////
1. install @reduxjs/toolkit and react-redux
2. Build the Store
3. connect store to the app
4. create Slice (cartSlice)
5. dispatch (action)
6. selector


///////////////////////////TESTING//////////////////////////////
1. Unit Testing 
            - Testing individual components or functions in isolation 
            to ensure they work as expected independently 
            of other parts of the application.
2. Intergration Testing 
            - Testing how multiple components or modules work together,
             ensuring that their interaction produces 
             the correct results.
3. End to End Testing
            - Testing the entire application from the userâ€™s 
            perspective by simulating real user scenarios 
            and validating complete workflows, 
            such as login, search, or checkout.

Libraries : React Testing Library, Jest Library

Setting Up:
1. Install React Testing Library (React Testing Library website)
2. Install Jest (Jest website)
3. Install Babel dependencies (Jest website)
4. Configure Babel (Jest website)
5. Configure Parcel to disable default
   Babel transpilation (parcel docs)

Jest Configuration:
- init Jest
- install jest enviroment jsdom package (React Testing Library)
- install npm i -D @babel/preset-react
- add it in babel config
- install npm i -D @testing-library/jest-dom